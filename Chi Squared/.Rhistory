#d)
pnorm(1,mean=m.xbar, sd=s.xbar,lower.tail=FALSE)
dnorm(n*p, n*p*(1-p))
pnorm(80, n*p, n*p*(1-p)) - pnorm(80, n*p, n*p(1-p))
# Example: Testing a fair coin ----
n <- 200
p <- 0.5
pnorm(80, n*p, n*p*(1-p)) - pnorm(80, n*p, n*p(1-p))
pnorm(80, n*p, n*p*(1-p)) - pnorm(80, n*p, n*p*(1-p))
pbinom(120, n, p) - pbinom(80, n, p)
pnorm(80, n*p, n*p*(1-p)) - pnorm(80, n*p, n*p*(1-p))
pnorm(120, n*p, n*p*(1-p)) - pnorm(80, n*p, n*p*(1-p))
# Example: Testing a fair coin ----
n <- 200
p <- 0.5
pbinom(120, n, p) - pbinom(80, n, p)
pnorm(120, n*p, n*p*(1-p)) - pnorm(80, n*p, n*p*(1-p))
pbinom(120, n, p) - pbinom(80, n, p)
# Example: Testing a fair coin with 200 times ----
n <- 200
p <- 0.5
pbinom(120, n, p) - pbinom(80, n, p)
diff(pbinom(c(120, 80), n, p))
diff(pbinom(c(80, 120), n, p))
# Computing p(80 < x.norm <= 120)
diff(pnorm(c(80, 120), n*p, sqrt(n*p*(1-p))))
# Doing proportions n' stuff
diff(pbnom(c(80, 120) / n, n, p))
# Doing proportions n' stuff
diff(pbinom(c(80, 120) / n, n, p))
# Doing proportions n' stuff
pnorm(diff(0.4, 0.6), p, sqrt(p*(1-p)/n))
# Doing proportions n' stuff
qnorm(diff(0.4, 0.6), p, sqrt(p*(1-p)/n))
# Doing proportions n' stuff
pnorm(0.6, p, sqrt(p*(1-p)/n)) - pnorm(0.4, p, sqrt(p*1*(1-p)/n))
diff(pnorm(c(0.6, 0.8), p, sqrt(p*(1-p)/n)))
diff(pnorm(c(0.8, 0.6), p, sqrt(p*(1-p)/n)))
# 1e
popul <- 56
stdev <- 7.5
36 <- n
n <- 36
# 1e
popul <- 56
stdev <- 7.5
n <- 36
dbinom(n*popul, sqrt(n*popul*(1-popul)))
mean(dnorm(n*popul, sqrt(n*popul*(1-popul))))
dnorm(n*popul, sqrt(n*popul*(1-popul)))
dnorm(50, n*popul, sqrt(n*popul*(1-popul)))
dnorm(3, n*popul, sqrt(n*popul*(1-popul)))
?dnorm
dnorm(3, n*popul, stdev)
56*36
popul * n
# 1e
p <- 56
stdev <- 7.5
n <- 36
popul * n
# 1f
meanf <- 205
stdevf <- 11
# 1f
meanf <- 205
stdevf <- 11
n <- 40
# 2a
m <- 20.65
s <- 8.4
n <- 50
s / sqrt(n)
# 3a
n <- 100
p <- 0.5
pnorm(0.6, n*p, sqrt(n*p*(1-p)))
# 3a
n <- 100
p <- 0.5
pnorm(0.6, n*p, sqrt(n*p*(1-p)))
pnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
pnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
qnorm(0.6, n*p, sqrt(n*p*(1-p)))
qnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
pnorm(0.32, p, sqrt(p*(1-p)/n))
# 3a
n <- 100
p <- 0.5
qnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
pnorm(0.32, p, sqrt(p*(1-p)/n))
pnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
qnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
q
q
qnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
pnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, n*p, sqrt(n*p*(1-p)))
qnorm(0.6, n*p, sqrt(n*p*(1-p)))
qnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
pnorm(0.32, p, sqrt(p*(1-p)/n))
dnorm(0.32, p, sqrt(p*(1-p)/n))
qnorm(0.32, p, sqrt(p*(1-p)/n))
dnorm(0.32, p, sqrt(p*(1-p)/n))
pnorm(0.32, p, sqrt(p*(1-p)/n))
pnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
dnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
qnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
pnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
qnorm(0.6, n*p, sqrt(n*p*(1-p)), lower.tail = FALSE)
pnorm(0.32, p, sqrt(p*(1-p)/n))
pnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
qnorm(0.6, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
qnorm(0.6, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
qnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.48, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
qnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.5, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
qnorm(0.5, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
pnorm(0.6, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
qnorm(0.32, p, sqrt(p*(1-p)/n), lower.tail = FALSE)
# 4
m <- 124
s <- 11
# 4
m <- 124
s <- 11
qnorm(140, m, s)
qnorm(140, m, s, lower.tail = FALSE)
# 4
m <- 124
s <- 11
qnorm(140, m, s, lower.tail = FALSE)
pnorm(140, m, s, lower.tail = FALSE)
pnorm(140, m, s/sqrt(n), lower.tail = FALSE)
#a
n <- 1
pnorm(140, m, s/sqrt(n), lower.tail = FALSE)
#c
n <- 4
pnorm(140, m, s/sqrt(n), lower.tail = FALSE)
#d
qnorm(0.05, p, s/sqrt(n), lower.tail = FALSE)
# 4
m <- 124
s <- 11
#a
n <- 1
pnorm(140, m, s/sqrt(n), lower.tail = FALSE)
#c
n <- 4
pnorm(140, m, s/sqrt(n), lower.tail = FALSE)
#d
qnorm(0.05, p, s/sqrt(n), lower.tail = FALSE)
#d
qnorm(0.05, p, s/sqrt(n))
#d
qnorm(0.05, m, s/sqrt(n), lower.tail = FALSE)
#d
qnorm(0.05, m, s/sqrt(n), lower.tail = TRUE)
#d
qnorm(0.05, m, s/sqrt(n), lower.tail = FALSE)
stdevf / sqrt(n)
# 1e
p <- 56
stdev <- 7.5
n <- 36
popul * n
# 1f
meanf <- 205
stdevf <- 11
n <- 40
stdevf / sqrt(n)
# 2a
m <- 20.65
s <- 8.4
n <- 50
s / sqrt(n)
# 2c
qnorm(25, m, s/sqrt(n), lower.tail = TRUE)
# 2a
m <- 20.65
s <- 8.4
n <- 50
s / sqrt(n)
# 2c
qnorm(25, m, s/sqrt(n), lower.tail = TRUE)
# 2c
pnorm(25, m, s/sqrt(n), lower.tail = TRUE)
#2d
pnorm(20, m, s/sqrt(n), lower.tail = FALSE)
#2e
pnorm(20, m, s/sqrt(n)) - pnorm(15, m, s/sqrt(n))
?chisq.test
# Example 1
shift1 <- matrix(c(15, 21, 25, 13, 26, 31, 34, 5, 33, 17, 49, 20), nrow = 3, ncol = 4)
shift1
# Example 1
shift1 <- matrix(c(15, 21, 25, 13, 26, 31, 34, 5, 33, 17, 49, 20), nrow = 3, ncol = 4, byrow = FALSE)
shift1
# Example 1
shift1 <- matrix(c(15, 21, 25, 13, 26, 31, 34, 5, 33, 17, 49, 20), nrow = 3, ncol = 4, byrow = TRUE)
shift1
# Example 1
defects <- matrix(c(15, 21, 25, 13, 26, 31, 34, 5, 33, 17, 49, 20), nrow = 3, ncol = 4, byrow = TRUE)
alpha <- 0.05
# Example 1
defects <- matrix(c(15, 21, 25, 13, 26, 31, 34, 5, 33, 17, 49, 20), nrow = 3, ncol = 4, byrow = TRUE)
alpha <- 0.05
# Example 1
shift1 <- c(15, 21, 45, 13)
shift2 <- c(26, 31, 34, 5)
shift3 <- c(33, 17, 49, 20)
# Example 1
shift1 <- c(15, 21, 45, 13)
shift2 <- c(26, 31, 34, 5)
shift3 <- c(33, 17, 49, 20)
defects <- as.table(rbind(shift1, shift2, shift3))
defects
dimnames(defects) <- list(Shift = c("I", "II", "III"),
Defect = c("A", "B", "C", "D"))
defects
addmargins(defect)
addmargins(defects)
chisq.test(defects)
prop.table(defects)
transpose(prop.table(defects))
prop.table(defects)
prop.table(defects) * 100
?furn
prop.table(defects) * 100
prop.table(defects)
prop.table(defects) * 100
?prop.table()
prop.table(defects, c(4, 5)) * 100
prop.table(defects, c(5, 4)) * 100
prop.table(defects, c(3, 4)) * 100
prop.table(defects, c(4, 3)) * 100
prop.table(defects, c(1, 2)) * 100
prop.table(defects, c(3, 2)) * 100
prop.table(defects) * 100
# Example 1 ----
shift1 <- c(15, 21, 45, 13)
shift2 <- c(26, 31, 34, 5)
shift3 <- c(33, 17, 49, 20)
defects <- as.table(rbind(shift1, shift2, shift3))
defects
dimnames(defects) <- list(Shift = c("I", "II", "III"),
Defect = c("A", "B", "C", "D"))
defects
prop.table(defects) * 100
# This basically adds the Sum statistics to the edges n' stuff.
addmargins(defects)
prop.table(defects) * 100
prop.table(addmargins(defects)) * 100
prop.table(defects) * 100
prop.table(shift1)
prop.table(rbind(c(shift1, shift2, shift3))
prop.table(rbind(c(shift1, shift2, shift3)))
prop.table(shift1)
prop.table(shift1) * 100
prop.table(shift2) * 100
prop.table(shift3) * 100
shift1p <- prop.table(shift1) * 100
shift2p <- prop.table(shift2) * 100
shift3p <- prop.table(shift3) * 100
defectsp <- as.table(cbind(shift1p, shift2p, shift3p))
defectsp
dimnames(defects) <- list(Defect = c("A", "B", "C", "D"),
Shift = c("I", "II", "III"))
dimnames(defects) <- list(Shift = c("I", "II", "III"),
Defect = c("A", "B", "C", "D"),)
dimnames(defectsp) <- list(Defect = c("A", "B", "C", "D"),
Shift = c("I", "II", "III"))
# This basically adds the Sum statistics to the edges n' stuff.
addmargins(defects)
shift1p <- prop.table(shift1) * 100
shift2p <- prop.table(shift2) * 100
shift3p <- prop.table(shift3) * 100
defectsp <- as.table(cbind(shift1p, shift2p, shift3p))
defectsp
dimnames(defectsp) <- list(Defect = c("A", "B", "C", "D"),
Shift = c("I", "II", "III"))
defectsp
?round
shift1p <- round(prop.table(shift1) * 100, 2)
defectsp <- as.table(cbind(shift1p, shift2p, shift3p))
dimnames(defectsp) <- list(Defect = c("A", "B", "C", "D"),
Shift = c("I", "II", "III"))
defectsp
shift1p <- round(prop.table(shift1) * 100, 2)
shift2p <- round(prop.table(shift2) * 100, 2)
shift3p <- round(prop.table(shift3) * 100, 2)
defectsp <- as.table(cbind(shift1p, shift2p, shift3p))
dimnames(defectsp) <- list(Defect = c("A", "B", "C", "D"),
Shift = c("I", "II", "III"))
defectsp
barplot(defects)
his(defects)
plot(hist)
plot(defectsp)
barplot(defectsp)
?barplot
barplot(defectsp, beside = TRUE)
barplot(defectsp, beside = TRUE,
ylim = c(0, 50))
barplot(defectsp, beside = TRUE,
ylim = c(0, 50),
main = "Comparison of Defect Types by Production Shift"
)
barplot(defectsp, beside = TRUE,
ylim = c(0, 50),
main = "Comparison of Defect Types by Production Shift",
ylab = "Percent",
xlab = "Shift"
)
barplot(defectsp, beside = TRUE,
ylim = c(0, 50),
main = "Comparison of Defect Types by Production Shift",
ylab = "Percent",
xlab = "Shift",
col = c("cyan4", "magenta4", "yellow4", "black")
)
barplot(defectsp, beside = TRUE,
ylim = c(0, 50),
main = "Comparison of Defect Types by Production Shift",
ylab = "Percent",
xlab = "Shift",
col = c("cyan2", "magenta2", "yellow2", "black")
)
barplot(defectsp, beside = TRUE,
ylim = c(0, 50),
main = "Comparison of Defect Types by Production Shift",
ylab = "Percent",
xlab = "Shift",
col = c("cyan3", "magenta3", "yellow3", "black")
)
barplot(defectsp, beside = TRUE,
ylim = c(0, 50),
main = "Comparison of Defect Types by Production Shift",
ylab = "Percent",
xlab = "Shift",
col = c("cyan3", "magenta3", "yellow3", "black"),
args.legend = list(x = "topleft")
)
barplot(defectsp, beside = TRUE,
ylim = c(0, 50),
main = "Comparison of Defect Types by Production Shift",
ylab = "Percent",
xlab = "Shift",
col = c("cyan3", "magenta3", "yellow3", "black"),
legend.text = c("A", "B", "C", "D"),
args.legend = list(x = "topleft")
)
barplot(defectsp, beside = TRUE,
ylim = c(0, 50),
main = "Comparison of Defect Types by Production Shift",
ylab = "Percent",
xlab = "Shift",
col = c("cyan3", "magenta3", "yellow3", "gray16"),
legend.text = c("A", "B", "C", "D"),
args.legend = list(x = "topleft")
)
abline(h = 0)
barplot(defectsp, beside = TRUE,
ylim = c(0, 50),
main = "Comparison of Defect Types by Production Shift",
ylab = "Percent",
xlab = "Shift",
col = c("cyan3", "magenta3", "yellow3", "gray24"),
legend.text = c("A", "B", "C", "D"),
args.legend = list(x = "topleft")
)
alpha <- 0.05
xsq <- chisq.test(defects)
xsq
xsq <- chisq.test(defectsp)
xsq
xsq <- chisq.test(defects)
xsq
abline(h = 0)
alpha <- 0.05
xsq$observed
xsq$expected
O <- xsq$observed
E <- xsq$expected
round(((O-E)^2), digits = 4)
setwd("~/R Stuff/Chi Squared")
sink("furniture.doc")
xsq
sink()
round(((O-E)^2), digits = 4)
xsq
pchisq(xsq = 19.178, df = 6)
?pchisq
pchisq(x = 19.178, df = 6)
pchisq(x = 19.178, df = 6)
pchisq(q = 19.178, df = 6)
pchisq(q = 19.178, df = 6, lower.tail = FALSEs)
pchisq(q = 19.178, df = 6, lower.tail = FALSE)
plot(pchisq(q = xsq, df = 6, lower.tail = FALSE))
pchisq(q = 19.178, df = 6, lower.tail = FALSE)
plot(dchisq(x = 0:25, df = 6))
plot(dchisq(x = 0:25, df = 6),
type="l")
?Seq
?seq
plot(dchisq(x = seq(0, 25, length.out = 256), df = 6),
type="l")
pval <- pchisq(q = xsq, df = 6, lower.tail = FALSE)
pval
xsq
pval <- pchisq(q = 19.178, df = 6, lower.tail = FALSE)
pval
plot(dchisq(x = seq(0, 25, length.out = 256), df = 6),
type="l",
)
plot(dchisq(x = seq(0, 25, length.out = 256), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2))
)
plot(dchisq(x = seq(0, 25, length.out = 256), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
seq(0, 25, length.out = 256)
plot(dchisq(x = seq(0, 25, length.out = 256), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
pval <- pchisq(q = 19.178, df = 6, lower.tail = FALSE)
pval
plot(dchisq(x = seq(0, 25, length.out = 256), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
plot(dchisq(x = seq(from = 0, to = 25, length.out = 256), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
plot(dchisq(x = seq(from = 0, to = 25, length.out = 256), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
plot(dchisq(x = seq(from = 0, to = 25, length.out = 25), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
plot(dchisq(x = seq(from = 0, to = 25, length.out = 50), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
plot(dchisq(x = seq(from = 0, to = 25, length.out = 200), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
polygon(c(19.178, seq(19.178, 25), 25), c(0, dchisq(seq(19.178, 25)), 0), col = "red")
polygon(c(19.178, seq(19.178, 25), 25), c(0, dchisq(seq(19.178, 25), 6), 0), col = "red")
plot(seq(from = 0, to = 25, length.out = 200), dchisq(x = seq(from = 0, to = 25, length.out = 200), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
polygon(c(19.178, seq(19.178, 25), 25), c(0, dchisq(seq(19.178, 25), 6), 0), col = "red")
arrows(23, 0.06, 20, 0.005, col="darkgreen",
lwd = 2, length = 0.2, angle = 20)
text(8, 0.065,
labels=("p-value = P(" ~chi[df == 6]^2 >= "19.178 | " H[0] * " is true) = 0.00387"),
text(8, 0.065,
labels=("p-value = P(" ~chi[df == 6]^2 >= "19.178 | is true) = 0.00387"),
font = 2, col = "darkgreen")
pval <- pchisq(q = 19.178, df = 6, lower.tail = FALSE)
pval
plot(seq(from = 0, to = 25, length.out = 200), dchisq(x = seq(from = 0, to = 25, length.out = 200), df = 6),
type="l",
main = expression(paste("Density Function of X ~ ", chi[df == 6]^2)),
xlab = "x", ylab = "f(x)"
)
polygon(c(19.178, seq(19.178, 25), 25), c(0, dchisq(seq(19.178, 25), 6), 0), col = "red")
arrows(23, 0.06, 20, 0.005, col="darkgreen",
lwd = 2, length = 0.2, angle = 20)
text(18, 0.065,
labels=("p-value = P(" ~chi[df == 6]^2 >= "19.178 | is true) = 0.00387"),
font = 2, col = "darkgreen")
# Example 2 ----
library(openxlsx)
student <- read("Student.xlsx")
student <- xlsx.read("Student.xlsx")
# Example 2 ----
library(openxlsx)
student <- read.xlsx("Student.xlsx")
student

beside = TRUE, # Sets them clustered instead of stacked
xlim = c(0, 14),
las = 1 # Labels to appear horizontally
)
barplot(cylmatrix,
horiz = TRUE, # Makes it horizontal instead of vertical
main = "Performance car counts\nby Transmission and Cylinders",
xlab = "Counts",
beside = TRUE, # Sets them clustered instead of stacked
xlim = c(0, 14),
las = 1, # Labels to appear horizontally
cex.main = 1.5
)
barplot(cylmatrix,
horiz = TRUE, # Makes it horizontal instead of vertical
main = "Performance car counts\nby Transmission and Cylinders",
xlab = "Counts",
beside = TRUE, # Sets them clustered instead of stacked
xlim = c(0, 14),
las = 1, # Labels to appear horizontally
cex.main = 1.5 # Size of title
)
legend(9, 2.35,
legend = c("manual", "automatic"),
col = c("black", "white"))
legend("bottmoright",
legend = c("manual", "automatic"),
fil = c("black", "white"))
legend("bottmoright",
legend = c("manual", "automatic"),
fill = c("black", "white"))
legend("bottomright",
legend = c("manual", "automatic"),
fill = c("black", "white"))
legend("bottomright",
legend = c("manual", "automatic"),
fill = c("gray", "black"),
cex = 1)
barplot(cylmatrix,
horiz = TRUE, # Makes it horizontal instead of vertical
main = "Performance car counts\nby Transmission and Cylinders",
xlab = "Counts",
beside = TRUE, # Sets them clustered instead of stacked
xlim = c(0, 14),
las = 1, # Labels to appear horizontally
cex.main = 1.5 # Size of title
)
legend("bottomright",
legend = c("manual", "automatic"),
fill = c("gray", "black"),
cex = 1)
# Pie Charts ----
group.per <- c(18, 30, 32, 10, 10)
pie(group.per)
pie(group.per,
labels = c("A, 18%", "B, 30%", "C, 32%", "D, 10%", "F, 10%"))
pie(group.per,
labels = c("A, 18%", "B, 30%", "C, 32%", "D, 10%", "F, 10%"),
col = c("gray", "white", "gray", "black", "gray90"))
pie(group.per,
labels = c("A, 18%", "B, 30%", "C, 32%", "D, 10%", "F, 10%"),
col = c("gray", "white", "gray", "black", "gray90"),
main = "Letter Grade Distribution")
# Produce a pie chart for cly for mtcars
mtcars$cyl
# Produce a pie chart for cly for mtcars
pie(mtcars$cyl)
# Produce a pie chart for cyl for mtcars
cyltab <- table(mtcars$cyl)
pie(cyltab)
pie(cyltab,
labels = c("V4", "V6", "V8"))
cyltab
# Produce a pie chart for cyl for mtcars
cyltab <- table(mtcars$cyl)
cyltab
pie(cyltab,
labels = c("V4, 11", "V6, 7", "V8, 14"))
pie(cyltab,
labels = c("V4, 11", "V6, 7", "V8, 14"),
main = "Count of Performance Cars\nby Number of Cylinders")
pie(cyltab,
labels = c("V4, 11", "V6, 7", "V8, 14"),
main = "Count of Performance Cars\nby Number of Cylinders",
col = c("white", "blue", "pink"))
prop.table(table(mtcars$cyl))
pie(cyltabperc,
labels = c("V4, 11", "V6, 7", "V8, 14"),
main = "Count of Performance Cars\nby Number of Cylinders",
col = c("white", "blue", "pink"))
pie(cyltab,
labels = c("V4, 11", "V6, 7", "V8, 14"),
main = "Count of Performance Cars\nby Number of Cylinders",
col = c("white", "blue", "pink"))
cyltabperc <- prop.table(table(mtcars$cyl))*100
cyltabperc
pie(cyltabperc,
labels = c("V4, 34.375%", "V6, 21.875%", "V8, 43.750%"),
main = "Count of Performance Cars\nby Number of Cylinders",
col = c("white", "blue", "pink"))
# Adding lines n' stuff ----
x <- c(3, 1, 9, 8, 25, 18)
y <- 2, 13, 8, 6, 11, 9)
# Adding lines n' stuff ----
x <- c(3, 1, 9, 8, 25, 18)
y <- c(2, 13, 8, 6, 11, 9)
plot(x, y)
abline(h=4)
abline(h=4)
abline(v=5)
abline(h=10, col="red", lty=2)
abline(v=15, col="green", lwd=2, lty=3)
plot(x, y)
lines(x = c(15, 25), y = c(4, 10), lty = "dashed", col = "blue", lwd = 2)
?segments
segments(x0 = 5, y0 = 12, x1 = 20, y1 = 4)
segments(x0 = 5, y0 = 12, x1 = 20, y1 = 4, lty = 2, col = "blue")
segments(x0 = 5, y0 = 12, x1 = 20, y1 = 4)
segments(x0 = 5, y0 = 12, x1 = 20, y1 = 4, lty = 2, col = "blue")
segments(x0 = 5, y0 = 10, x1 = 25, y1 = 5, lty = "dotted", col = "red")
segments(x0 = 5, y0 = 10, x1 = 25, y1 = 5, lty = "dotted", col = "red", lwd = 2)
plot(x, y)
lines(x = c(15, 25), y = c(4, 10), lty = "dashed", col = "blue", lwd = 2)
segments(x0 = 5, y0 = 12, x1 = 20, y1 = 4)
segments(x0 = 5, y0 = 12, x1 = 20, y1 = 4, lty = 2, col = "blue")
segments(x0 = 5, y0 = 10, x1 = 25, y1 = 5, lty = "dotted", col = "red", lwd = 2)
# Exercise: Plot the graph displayed in the notesheets n' stuff
plot(x, y)
abline(h=10, col="blue", lty="dashed", lwd=2)
abline(h=5, col="blue", lty="dashed", lwd=2)
lines(x = c(5,5), y = c(5,10), col="red", lty="dotted")
lines(x = c(5,5), y = c(5,10), col="red", lty="dotted", lwd = 2)
# Exercise: Plot the graph displayed in the notesheets n' stuff
plot(x, y)
abline(h=10, col="blue", lty="dashed", lwd=2)
abline(h=5, col="blue", lty="dashed", lwd=2)
lines(x = c(5,5), y = c(5,10), col="red", lty="dotted", lwd = 2)
lines(x = c(20,20), y = c(5,10), col="red", lty="dotted", lwd = 2)
?plot
?par
?plot
?points
# Exercise: Plot the graph displayed in the notesheets n' stuff
plot(x, y, pch=16)
abline(h=10, col="blue", lty="dashed", lwd=2)
abline(h=5, col="blue", lty="dashed", lwd=2)
lines(x = c(5,5), y = c(5,10), col="red", lty="dotted", lwd = 2)
lines(x = c(20,20), y = c(5,10), col="red", lty="dotted", lwd = 2)
?plot
# Exercise: Plot the graph displayed in the notesheets n' stuff
plot(x, y, pch=19)
abline(h=10, col="blue", lty="dashed", lwd=2)
abline(h=5, col="blue", lty="dashed", lwd=2)
lines(x = c(5,5), y = c(5,10), col="red", lty="dotted", lwd = 2)
lines(x = c(20,20), y = c(5,10), col="red", lty="dotted", lwd = 2)
?points
# Exercise: Plot the graph displayed in the notesheets n' stuff
plot(x, y, pch=19)
abline(h=10, col="blue", lty="dashed", lwd=2)
abline(h=5, col="blue", lty="dashed", lwd=2)
lines(x = c(5,5), y = c(5,10), col="red", lty="dotted", lwd = 2)
lines(x = c(20,20), y = c(5,10), col="red", lty="dotted", lwd = 2)
# Histograms n' stuff ----
hist()
?hist
# Histograms n' stuff ----
hist(mtcars$hp)
hist(mtcars$hp,
breaks = 15,
main = "Histogram of Gross Horsepower",
xlab = "HP",
col = "lightgreen")
hist(mtcars$hp,
breaks = 15,
main = "Histogram of Gross Horsepower",
xlab = "HP",
col = "lightgreen",
freq = FALSE)
hist(mtcars$hp,
breaks = 15,
main = "Histogram of Gross Horsepower",
xlab = "HP",
col = "lightgreen",
freq = FALSE, # Density instead of frequency
)
# Q-Q Plots n' Stuff ----
head(iris)
# Q-Q Plots n' Stuff ----
head(iris)
qqnorm(iris$Sepal.Length, main = "Normal Q-Q Plot: Sepal.Length")
qqline(iris$Sepal.Length)
?subset
par(mfrow = c(1, 3))
qqnorm(subset(iris, iris$Species == "Setosa", iris$Sepal.Length))
with (iris,
qqnorm(subset(iris, Species == "Setosa", Sepal.Length))
)
with (iris,
qqnorm(subset(iris, Species == "Setosa", Sepal.Length))
)
qqnorm(subset(iris, iris$Species == "Setosa", iris$Sepal.Length))
subset(iris, iris$Species == "Setosa")
subset(iris, iris$Species == "setosa")
qqnorm(subset(iris, iris$Species == "setosa", iris$Sepal.Length))
subset(iris, iris$Species == "setosa")
subset(iris, iris$Species == "setosa", iris$Sepal.Length)
subset(iris, subset = iris$Species == "setosa", select = iris$Sepal.Length)
?subset
subset(iris, subset = iris$Species == "setosa")
subset(iris, subset = Species == "setosa")
subset(iris, subset = Species == "setosa", select = Sepal.Length)
qqnorm(subset(iris, subset = Species == "setosa", select = Sepal.Length))
qqnorm(list(subset(iris, subset = Species == "setosa", select = Sepal.Length)))
list(subset(iris, subset = Species == "setosa", select = Sepal.Length))
iris$Sepal.length
iris$Sepal.Length
qqnorm(iris$Sepal.Length[,iris$Species == "setosa"])
iris$Sepal.Length[,iris$Species == "setosa"]
iris$Species == "setosa"
iris$Sepal.Length[iris$Species == "setosa",]
iris$Sepal.Length[,iris$Species == "setosa"]
iris$Sepal.Length[,setosa]
setosa <- iris$Species == "setosa"
iris$Sepal.Length[,setosa]
iris$Sepal.Length[setosa]
qqnorm(iris$Sepal.Length[iris$Species == "setosa"])
par(mfrow = c(1, 3))
qqnorm(iris$Sepal.Length[iris$Species == "setosa"])
qqnorm(iris$Sepal.Length[iris$Species == "virginica"])
qqnorm(iris$Sepal.Length[iris$Species == "versicolor"])
par(mfrow = c(1, 3))
qqnorm(iris$Sepal.Length[iris$Species == "setosa"], main = "Q-Q Plot: Sepal.Length\nfor Setosa")
qqline(iris$Sepal.Length[iris$Species == "setosa"])
qqnorm(iris$Sepal.Length[iris$Species == "virginica"], main = "Q-Q Plot: Sepal.Length\nfor Virginica")
qqline(iris$Sepal.Length[iris$Species == "virginica"])
qqnorm(iris$Sepal.Length[iris$Species == "versicolor"], main = "Q-Q Plot: Sepal.Length\nfor Versicolor")
qqline(iris$Sepal.Length[iris$Species == "versicolor"])
# Curve Function ----
curve(dnorm, from = -3.5, to = 3.5,
main = "Standard Normal Density Function",
col = "blue",
lwd = 3,
xlab = "Z",
ylab = "Density")
# Curve Function ----
par(mfrow = c(1, 1))
curve(dnorm, from = -3.5, to = 3.5,
main = "Standard Normal Density Function",
col = "blue",
lwd = 3,
xlab = "Z",
ylab = "Density")
# Other curve types
curve(x^2-3*x, from = -2, to = 2, col = "green", lwd = 2)
curve(x^2-2, add = TRUE, col = "violet", lwd = 2, lty = 2)
?curve
# Exercise Thingy
z <- seq(-3.5,3.5, length-out = 100)
# Exercise Thingy
z <- seq(-3.5,3.5, length.out = 100)
fz <- dnorm(z)
plot(z, fz, main = "Standard Normal Distribution", type = "1",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
plot(z, fz, main = "Standard Normal Distribution", type = 1,
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
plot(z, fz, main = "Standard Normal Distribution", type = "l",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
abline(h=0)
region.z <- z[-0.5 < z & z < 2]
region.fz <- fz[-0.5 < z < 2]
region.fz <- fz[-0.5 < z & z < 2]
region.z <- c(region.z[1], region.z, tail(region.z,1))
region.fz <- c(0, region.fz, 0)
polygon(region.z, region.fz, density=-2, col="red")
?polygon
# Exercise Thingy
z <- seq(-7.5,3.5, length.out = 100)
fz <- dnorm(z)
plot(z, fz, main = "Standard Normal Distribution", type = "l",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
abline(h=0)
region.z <- z[-0.5 < z & z < 2]
region.fz <- fz[-0.5 < z & z < 2]
region.z <- c(region.z[1], region.z, tail(region.z,1))
region.fz <- c(0, region.fz, 0)
polygon(region.z, region.fz, density=-2, col="red")
3
3
3
3
3
3
3
3
# Exercise Thingy
z <- seq(-3.5,3.5, length.out = 100)
fz <- dnorm(z)
plot(z, fz, main = "Standard Normal Distribution", type = "l",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
abline(h=0)
region.z <- z[-0.5 < z & z < 2]
region.fz <- fz[-0.5 < z & z < 2]
region.z <- c(region.z[1], region.z, tail(region.z,1))
region.fz <- c(0, region.fz, 0)
polygon(region.z, region.fz, density=-2, col="red")
region2.z <- z[z < 0.5]
region.fz <- fz[z < 0.5]
# Exercise Thingy
z <- seq(-3.5,3.5, length.out = 100)
fz <- dnorm(z)
plot(z, fz, main = "Standard Normal Distribution", type = "l",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
abline(h=0)
region.z <- z[-0.5 < z & z < 2]
region.fz <- fz[-0.5 < z & z < 2]
region.z <- c(region.z[1], region.z, tail(region.z,1))
region.fz <- c(0, region.fz, 0)
polygon(region.z, region.fz, density=-2, col="red")
region2.z <- z[z < 0.5]
region2.fz <- fz[z < 0.5]
region2.z <- c(region.z[1], region.z, tail(region.z,1))
region2.z <- z[z < 0.5]
region2.fz <- fz[z < 0.5]
region2.z <- c(region2.z[1], region2.z, tail(region.z,1))
region2.fz <- c(0, region2.fz, 0)
polygon(region2.z, region2.fz, density=-2, col="coral")
region2.z <- z[z < 0.5]
region2.fz <- fz[z < 0.5]
region2.z <- c(region2.z[1], region2.z, tail(region.z,1))
region2.fz <- c(0, region2.fz, 0)
polygon(region2.z, region2.fz, density=-2, col="coral")
# Exercise Thingy
z <- seq(-3.5,3.5, length.out = 100)
fz <- dnorm(z)
plot(z, fz, main = "Standard Normal Distribution", type = "l",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
abline(h=0)
region.z <- z[-0.5 < z & z < 2]
region.fz <- fz[-0.5 < z & z < 2]
region.z <- c(region.z[1], region.z, tail(region.z,1))
region.fz <- c(0, region.fz, 0)
polygon(region.z, region.fz, density=-2, col="red")
region2.z <- z[z < 0.5]
region2.fz <- fz[z < 0.5]
region2.z <- c(region2.z[1], region2.z, tail(region.z,1))
region2.fz <- c(0, region2.fz, 0)
polygon(region2.z, region2.fz, density=-2, col="coral")
# Exercise Thingy
z <- seq(-3.5,3.5, length.out = 100)
fz <- dnorm(z)
plot(z, fz, main = "Standard Normal Distribution", type = "l",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
abline(h=0)
region.z <- z[-0.5 < z & z < 2]
region.fz <- fz[-0.5 < z & z < 2]
region.z <- c(region.z[1], region.z, tail(region.z,1))
region.fz <- c(0, region.fz, 0)
polygon(region.z, region.fz, density=-2, col="red")
region2.z <- z[z < 0.5]
region2.fz <- fz[z < 0.5]
region2.z <- c(region2.z[1], region2.z, tail(region2.z,1))
region2.fz <- c(0, region2.fz, 0)
polygon(region2.z, region2.fz, density=-2, col="coral")
# Exercise Thingy
z <- seq(-3.5,3.5, length.out = 100)
fz <- dnorm(z)
plot(z, fz, main = "Standard Normal Distribution", type = "l",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
abline(h=0)
region.z <- z[-0.5 < z & z < 2]
region.fz <- fz[-0.5 < z & z < 2]
region.z <- c(region.z[1], region.z, tail(region.z,1))
region.fz <- c(0, region.fz, 0)
polygon(region.z, region.fz, density=-2, col="red")
region2.z <- z[z < -0.5]
region2.fz <- fz[z < -0.5]
region2.z <- c(region2.z[1], region2.z, tail(region2.z,1))
region2.fz <- c(0, region2.fz, 0)
polygon(region2.z, region2.fz, density=-2, col="coral")
# Exercise Thingy
z <- seq(-3.5,3.5, length.out = 100)
fz <- dnorm(z)
plot(z, fz, main = "Standard Normal Distribution", type = "l",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
abline(h=0)
region.z <- z[-0.5 < z & z < 2]
region.fz <- fz[-0.5 < z & z < 2]
region.z <- c(region.z[1], region.z, tail(region.z,1))
region.fz <- c(0, region.fz, 0)
polygon(region.z, region.fz, density=-2, col="red")
region2.z <- z[z <= -0.5]
region2.fz <- fz[z <= -0.5]
region2.z <- c(region2.z[1], region2.z, tail(region2.z,1))
region2.fz <- c(0, region2.fz, 0)
polygon(region2.z, region2.fz, density=-2, col="coral")
region2.z <- z[z < -0.5]
region2.fz <- fz[z < -0.5]
region2.z <- c(region2.z[1], region2.z, tail(region2.z,1))
region2.fz <- c(0, region2.fz, 0)
polygon(region2.z, region2.fz, density=-2, col="coral")
z <- seq(-3.5,3.5, length.out = 100)
fz <- dnorm(z)
plot(z, fz, main = "Standard Normal Distribution", type = "l",
ylab = "Density", xlab = "Z",
col = "blue", lwd = 3)
abline(h=0)
region.z <- z[-0.5 < z & z < 2]
region.fz <- fz[-0.5 < z & z < 2]
region.z <- c(region.z[1], region.z, tail(region.z,1))
region.fz <- c(0, region.fz, 0)
polygon(region.z, region.fz, density=-2, col="red")
region2.z <- z[z < -0.5]
region2.fz <- fz[z < -0.5]
region2.z <- c(region2.z[1], region2.z, tail(region2.z,1))
region2.fz <- c(0, region2.fz, 0)
polygon(region2.z, region2.fz, density=-2, col="coral")
setwd("~/R Stuff/Probability Distributions")
?df
?dbinom
dbinom(x = 4, size = 10, prob = 0.5)
# P(3 < X <= 7)
b.result <- dbinom(x = 4:7, size = 10, prob = 0.5)
b.result
sum(b.result)
# Create a probability histogram of X
his(dbinom(x = 0:10, size = 10, prob = 0.5))
# Create a probability histogram of X
hist(dbinom(x = 0:10, size = 10, prob = 0.5))
# Create a probability histogram of X
plot(0:10, dbinom(0:10, size=10, prob=0.5), type = "h")
?hist
# Create a probability histogram of X
plot(0:10, dbinom(0:10, size=10, prob=0.5), type = "h")
?barplot
# Create a probability histogram of X
barplot(dbinom(0:10, size=10, prob=0.5))
# Create a probability histogram of X
barplot(dbinom(0:10, size=10, prob=0.5),
xlim = c(0, 10))
# Create a probability histogram of X
barplot(dbinom(0:10, size=10, prob=0.5),
xlim = c(0, 10),
ylim = c(0, 0.25)
)
# Create a probability histogram of X
barplot(dbinom(0:10, size=10, prob=0.5),
names.arg = 0:10,
xlim = c(0, 10),
ylim = c(0, 0.25)
)
# Create a probability histogram of X
barplot(dbinom(0:10, size=10, prob=0.5),
names.arg = 0:10,
ylim = c(0, 0.25)
)
# Create a probability histogram of X
barplot(dbinom(0:10, size=10, prob=0.5),
names.arg = 0:10,
ylim = c(0, 0.25),
axis.lty = 1
)
# Create a probability histogram of X
barplot(dbinom(0:10, size=10, prob=0.5),
names.arg = 0:10,
ylim = c(0, 0.25),
axis.lty = 1,
main = "Probability Histogram of\nX ~ Bin(n=10, p=0.5)"
)
# Create a probability histogram of X
barplot(dbinom(0:10, size=10, prob=0.5),
names.arg = 0:10,
ylim = c(0, 0.25),
axis.lty = 1,
main = "Probability Histogram of\nX ~ Bin(n=10, p=0.5)",
xlab = "X",
ylab = "Probability"
)
plot(0:10, dbinom(0:10, size=10, prob=0.5),
type="h", lwd=5,
)
plot(0:10, dbinom(0:10, size=10, prob=0.5),
type = "h",
lwd = 5,
main = "Probability Histogram of\nX ~ Bin(n=10, p=0.5)",
xlab = "X",
ylab = "Probability")
# P(X <= 4)
pbinom(q = 4, size = 10, prob = 0.5, lower.tail = TRUE)
?pbinom
pbinom(q = 4, size = 10, prob = 0.5)
# P(X <= 4)
pbinom(q = 4, size = 10, prob = 0.5, lower.tail = TRUE)
pbinom(q = 4, size = 10, prob = 0.5)
# P(X > 4)
1 - pbinom(q = 4, size = 10, prob = 0.5, lower.tail = TRUE)
pbinom(q = 10, size = 10, prob = 0.5, lower.tail = TRUE) pbinom(q = 4, size = 10, prob = 0.5, lower.tail = TRUE)
pbinom(q = 10, size = 10, prob = 0.5, lower.tail = TRUE) - pbinom(q = 4, size = 10, prob = 0.5, lower.tail = TRUE)
# P(X <= 4)
pbinom(q = 4, size = 10, prob = 0.5, lower.tail = TRUE)
# P(X > 4)
1 - pbinom(q = 4, size = 10, prob = 0.5, lower.tail = TRUE)
pbinom(q = 4, size = 10, prob = 0.5, lower.tail = FALSE)
